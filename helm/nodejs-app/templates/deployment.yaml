apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nodejs-app.fullname" . }}
  labels:
    {{- include "nodejs-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "nodejs-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "nodejs-app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          envFrom:
          - secretRef:
              name: mysql-db-password-2
          volumeMounts:
          - name: secret-volume
            mountPath: /etc/secrets # The path where the secret will be mounted
            readOnly: true          
          # env:
          #   - name: MYSQL_HOST
          #     value: {{ .Values.mysql.host }}
          #   - name: MYSQL_PORT
          #     value: {{ .Values.mysql.port | quote }}
          #   - name: MYSQL_DATABASE
          #     value: {{ .Values.mysql.database }}
          #   - name: MYSQL_USER
          #     value: {{ .Values.mysql.username }}
          #   - name: MYSQL_PASSWORD
          #     value: {{ .Values.mysql.password }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }} 
      volumes:
      - name: secret-volume
        secret:
          secretName: mysql-db-password-2          